config의 내용
latitude 위도 longitude 경도
{
  "lat" : [큰 위도, 작은 위도, 111], <--- 위도상 범위
  "lon" : [작은 경도, 큰 경도, 88.74],  <--- 경도상 범위
  "fileSrc": "./highways1_01.pbf", <--- 파싱해서 사용할 파일
  "roadFileSrc": "./new_openAPI_seoul_road.json", <--- 도로 두께 정보를 가져올 파일
  "generate": [50,50] <--- 생성할 좌표(사용하지 않음)
}

절차상 사용법 ( await을 붙히셈)
readOsm.init(); <--- config 기반의 기초 작업을 수행한다.
-----지도 도로 데이터-----
readOsm.loadData(); <--- 파일을 읽어서 객체로 만든다.
readOsm.parseData(); <--- 지도 객체를 파싱한다.
-----지도 영역 데이터-----
readOsm.loadArea(); <--- turf polygonize를 사용하여 영역 데이터를 만든다
readOsm.getArea(); <--- 이미 저장된 영역 데이터가 있을 경우 loadArea 대신 사용 가능하다
readOsm.areaToCell(); <--- 영역 데이터를 셀에 저장한다
-----렌더링-----
    for(let x = 0; x < readOsm.lonCell; x++){
        for(let y = 0; y < readOsm.latCell; y++){
            await readOsm.generate(x, y);
        }
    }
    // await readOsm.showCellData(26, 60);
})();